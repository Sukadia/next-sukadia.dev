"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-client_app_space_BabylonScene_tsx"],{

/***/ "(app-client)/./app/space/BabylonScene.tsx":
/*!************************************!*\
  !*** ./app/space/BabylonScene.tsx ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ BabylonScene; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-client)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-client)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _babylonjs_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babylonjs/core */ \"(app-client)/./node_modules/@babylonjs/core/index.js\");\n/* harmony import */ var _BabylonInteractivity__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./BabylonInteractivity */ \"(app-client)/./app/space/BabylonInteractivity.tsx\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \n\n\n\nclass BabylonScene extends react__WEBPACK_IMPORTED_MODULE_1__.PureComponent {\n    componentDidMount() {\n        console.clear();\n        this.setup(this.canvas);\n    }\n    render() {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"canvas\", {\n                id: this.id,\n                ref: this.onMount,\n                style: style\n            }, void 0, false, {\n                fileName: \"X:\\\\Some Useful Stuff\\\\Applications\\\\Web\\\\next-sukadia.dev\\\\app\\\\space\\\\BabylonScene.tsx\",\n                lineNumber: 170,\n                columnNumber: 9\n            }, this)\n        }, void 0, false);\n    }\n    constructor(...args){\n        super(...args);\n        this.setup = async (canvas)=>{\n            _babylonjs_core__WEBPACK_IMPORTED_MODULE_2__.ShaderStore.ShadersStoreWGSL[\"starsPixelShader\"] = \"\\n        uniform seed : f32;\\n        uniform density : f32;\\n        uniform brightness : f32;\\n\\n        fn rand(seed : vec2<f32>) -> f32 {\\n            return fract(sin(dot(seed, vec2(12.9898, 78.233))) * 43758.5453);\\n        }\\n\\n        @fragment\\n        fn main(input : FragmentInputs) -> FragmentOutputs {\\n\\n            let random = rand(input.vUV*uniforms.seed);\\n            var brightness = 0.0;\\n            if (random < uniforms.density){\\n                brightness = random/uniforms.density*uniforms.brightness;\\n            }\\n            //fragmentOutputs.color = vec4(1., 1., 1., brightness);\\n            fragmentOutputs.color = vec4(brightness, brightness, brightness, 1.);\\n        }\\n    \";\n            _babylonjs_core__WEBPACK_IMPORTED_MODULE_2__.ShaderStore.ShadersStoreWGSL[\"nebulasPixelShader\"] = \"\\n        var textureSampler: texture_2d<f32>;\\n        var textureSamplerSampler: sampler;\\n\\n        uniform seed: f32;\\n        uniform color: vec4<f32>;\\n        uniform nebulascale: u32;\\n        uniform depth: u32;\\n        uniform intensity: f32;\\n        uniform falloff: f32;\\n        uniform persistence: f32;\\n\\n        fn mod289(x: vec2<f32>) -> vec2<f32> {\\n            return x - floor(x * (1. / 289.)) * 289.;\\n        }\\n        \\n        fn mod289_3(x: vec3<f32>) -> vec3<f32> {\\n            return x - floor(x * (1. / 289.)) * 289.;\\n        }\\n        \\n        fn permute3(x: vec3<f32>) -> vec3<f32> {\\n            return mod289_3(((x * 34.) + 1.) * x);\\n        }\\n        \\n        //  MIT License. \\xa9 Ian McEwan, Stefan Gustavson, Munrocket\\n        fn simplexNoise2(v: vec2<f32>) -> f32 {\\n            let C = vec4(\\n                0.211324865405187, // (3.0-sqrt(3.0))/6.0\\n                0.366025403784439, // 0.5*(sqrt(3.0)-1.0)\\n                -0.577350269189626, // -1.0 + 2.0 * C.x\\n                0.024390243902439 // 1.0 / 41.0\\n            );\\n        \\n            // First corner\\n            var i = floor(v + dot(v, C.yy));\\n            let x0 = v - i + dot(i, C.xx);\\n        \\n            // Other corners\\n            var i1 = select(vec2(0., 1.), vec2(1., 0.), x0.x > x0.y);\\n        \\n            // x0 = x0 - 0.0 + 0.0 * C.xx ;\\n            // x1 = x0 - i1 + 1.0 * C.xx ;\\n            // x2 = x0 - 1.0 + 2.0 * C.xx ;\\n            var x12 = x0.xyxy + C.xxzz;\\n            x12.x = x12.x - i1.x;\\n            x12.y = x12.y - i1.y;\\n        \\n            // Permutations\\n            i = mod289(i); // Avoid truncation effects in permutation\\n        \\n            var p = permute3(permute3(i.y + vec3(0., i1.y, 1.)) + i.x + vec3(0., i1.x, 1.));\\n            var m = max(0.5 - vec3(dot(x0, x0), dot(x12.xy, x12.xy), dot(x12.zw, x12.zw)), vec3(0.));\\n            m *= m;\\n            m *= m;\\n        \\n            // Gradients: 41 points uniformly over a line, mapped onto a diamond.\\n            // The ring size 17*17 = 289 is close to a multiple of 41 (41*7 = 287)\\n            let x = 2. * fract(p * C.www) - 1.;\\n            let h = abs(x) - 0.5;\\n            let ox = floor(x + 0.5);\\n            let a0 = x - ox;\\n        \\n            // Normalize gradients implicitly by scaling m\\n            // Approximation of: m *= inversesqrt( a0*a0 + h*h );\\n            m *= 1.79284291400159 - 0.85373472095314 * (a0 * a0 + h * h);\\n        \\n            // Compute final noise value at P\\n            let g = vec3(a0.x * x0.x + h.x * x0.y, a0.yz * x12.xz + h.yz * x12.yw);\\n            return 130. * dot(m, g);\\n        }\\n\\n        fn normalNoise(v: vec2<f32>) -> f32 {\\n            return simplexNoise2(v)*0.5 + 0.5;\\n        }\\n\\n        @fragment\\n        fn main(input : FragmentInputs) -> FragmentOutputs {\\n            let sampleColor = textureSample(textureSampler,textureSamplerSampler,fragmentInputs.vUV);\\n\\n            var offset = 0.;\\n            let scaledUV = (input.vUV+offset+uniforms.seed)*f32(uniforms.nebulascale)/uniforms.scale;\\n\\n            var displace = 0.;\\n            var i=u32(0);\\n            for (i=0; i<uniforms.depth; i++){\\n                displace = normalNoise(scaledUV*pow(uniforms.persistence,f32(i+1))+displace);\\n            }\\n            var finalTransparency = normalNoise(scaledUV+displace);\\n            finalTransparency = pow(max(finalTransparency+uniforms.intensity,0), uniforms.falloff);\\n\\n            fragmentOutputs.color = mix(sampleColor,uniforms.color,finalTransparency);\\n        }\\n    \";\n            const engine = await this.createEngine(canvas);\n            const scene = new _babylonjs_core__WEBPACK_IMPORTED_MODULE_2__.Scene(engine);\n            scene.clearColor = new _babylonjs_core__WEBPACK_IMPORTED_MODULE_2__.Color4(0, 0, 0, 0);\n            const camera = new _babylonjs_core__WEBPACK_IMPORTED_MODULE_2__.ArcRotateCamera(\"camera\", 0, 0, 0, new _babylonjs_core__WEBPACK_IMPORTED_MODULE_2__.Vector3(0, 0, 0), scene);\n            _BabylonInteractivity__WEBPACK_IMPORTED_MODULE_3__[\"default\"].initialize(canvas, engine, scene, camera);\n            _BabylonInteractivity__WEBPACK_IMPORTED_MODULE_3__[\"default\"].generateFrame();\n        };\n        this.createEngine = async (canvas)=>{\n            let engine;\n            if (await _babylonjs_core__WEBPACK_IMPORTED_MODULE_2__.WebGPUEngine.IsSupportedAsync) {\n                engine = new _babylonjs_core__WEBPACK_IMPORTED_MODULE_2__.WebGPUEngine(canvas);\n                await engine.initAsync();\n            } else {\n                console.log(\"WebGPU is not supported (or turned on) for this browser!\");\n                engine = new _babylonjs_core__WEBPACK_IMPORTED_MODULE_2__.WebGPUEngine(canvas);\n            }\n            return engine;\n        };\n        this.id = \"Babylon\";\n        this.onMount = (canvas)=>this.canvas = canvas;\n    }\n}\n/**\r\n * Babylon 3D Scene.\r\n */ \nconst style = {\n    width: window.innerWidth,\n    height: window.innerHeight,\n    background: \"transparent\"\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-client)/./app/space/BabylonScene.tsx\n"));

/***/ })

}]);