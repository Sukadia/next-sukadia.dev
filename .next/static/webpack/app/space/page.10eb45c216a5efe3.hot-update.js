"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/space/page",{

/***/ "(app-client)/./app/space/BabylonInteractivity.tsx":
/*!********************************************!*\
  !*** ./app/space/BabylonInteractivity.tsx ***!
  \********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ BabylonInteractivity; }\n/* harmony export */ });\n/* harmony import */ var _babylonjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babylonjs/core */ \"(app-client)/./node_modules/@babylonjs/core/index.js\");\n/* harmony import */ var _ParameterPanel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ParameterPanel */ \"(app-client)/./app/space/ParameterPanel.tsx\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \n\nlet canvas;\nlet engine;\nlet scene;\nlet camera;\nlet starshader;\nlet nebulashaders = [];\nfunction hashString(string) {\n    var hash = 0, i, chr;\n    for(i = 0; i < string.length; i++){\n        chr = string.charCodeAt(i);\n        hash = (hash << 5) - hash + chr;\n        hash |= 0; // Convert to 32bit integer\n    }\n    return Math.abs(hash);\n}\nfunction mulberry32(a) {\n    var t = a += 0x6D2B79F5;\n    t = Math.imul(t ^ t >>> 15, t | 1);\n    t ^= t + Math.imul(t ^ t >>> 7, t | 61);\n    return ((t ^ t >>> 14) >>> 0) / 4294967296;\n}\nlet lastseed;\nlet seednum;\nclass BabylonInteractivity {\n    static generateFrame() {\n        if (!canvas) return;\n        let starttime = performance.now();\n        const parameters = (0,_ParameterPanel__WEBPACK_IMPORTED_MODULE_1__.getParameters)();\n        // Resize canvas if necessary\n        if (canvas.width != parameters.width || canvas.height != parameters.height) {\n            this.resizeFrame(parameters.width, parameters.height);\n        }\n        // Rehash seed if necessary\n        if (lastseed != parameters.seed) {\n            seednum = mulberry32(hashString(parameters.seed));\n            lastseed = parameters.seed;\n            console.log(1);\n        }\n        // Apply new parameters\n        if (parameters.density != 0 && parameters.brightness != 0) {\n            camera.attachPostProcess(starshader);\n            starshader.onApply = (effect)=>{\n                effect.setFloat(\"seed\", seednum + 5);\n                effect.setFloat(\"density\", parameters.density / 100);\n                effect.setFloat(\"brightness\", parameters.brightness / 100);\n            };\n        }\n        for(let i = 0; i < nebulashaders.length; i++){\n            camera.detachPostProcess(nebulashaders[i]);\n        }\n        for(let i = 0; i < parameters.count; i++){\n            camera.attachPostProcess(nebulashaders[i]);\n            nebulashaders[i].onApply = (effect)=>{\n                effect.setFloat(\"seed\", seednum * 1000 * (i + 1));\n                effect.setFloat4(\"color\", parameters[\"color\".concat(i + 1)].r / 255, parameters[\"color\".concat(i + 1)].g / 255, parameters[\"color\".concat(i + 1)].b / 255, 1);\n                effect.setUInt(\"nebulascale\", parameters.scale);\n                effect.setUInt(\"depth\", parameters.depth);\n                effect.setFloat(\"intensity\", parameters.intensity / 100 - 1);\n                effect.setFloat(\"falloff\", parameters.falloff);\n                effect.setFloat(\"persistence\", parameters.persistence);\n                //BUG: Renders are delayed by one render/\n                effect.setTextureSampler(\"textureSamplerSampler\", nebulashaders[i].inputTexture.texture);\n            };\n        }\n        scene.onAfterRenderObservable.addOnce(()=>{\n            console.log(\"Rendered in \".concat(Math.round((performance.now() - starttime) * 100) / 100, \"ms\"));\n        });\n        engine.beginFrame();\n        scene.render();\n        engine.endFrame();\n    }\n    static resizeFrame(width, height) {\n        canvas.style.width = width.toString() + \"px\";\n        canvas.style.height = height.toString() + \"px\";\n        engine.resize();\n    }\n    static async exportFrame() {\n        const parameters = (0,_ParameterPanel__WEBPACK_IMPORTED_MODULE_1__.getParameters)();\n        _babylonjs_core__WEBPACK_IMPORTED_MODULE_0__.Tools.CreateScreenshotUsingRenderTarget(engine, camera, {\n            width: canvas.width,\n            height: canvas.height\n        }, undefined, undefined, undefined, undefined, \"nebula-\".concat(parameters.seed));\n        this.generateFrame();\n    }\n    static setTransparency(bool) {\n        if (bool) scene.clearColor = new _babylonjs_core__WEBPACK_IMPORTED_MODULE_0__.Color4(0, 0, 0, 0);\n        else scene.clearColor = new _babylonjs_core__WEBPACK_IMPORTED_MODULE_0__.Color4(0, 0, 0, 1);\n    }\n    static initialize(newcanvas, newengine, newscene, newcamera) {\n        canvas = newcanvas;\n        engine = newengine;\n        scene = newscene;\n        camera = newcamera;\n        starshader = new _babylonjs_core__WEBPACK_IMPORTED_MODULE_0__.PostProcess(\"StarShader\", \"stars\", null, null, 1, camera, undefined, engine, true, undefined, undefined, undefined, undefined, undefined, undefined, _babylonjs_core__WEBPACK_IMPORTED_MODULE_0__.ShaderLanguage.WGSL);\n        for(let i = 0; i < 2; i++){\n            nebulashaders.push(new _babylonjs_core__WEBPACK_IMPORTED_MODULE_0__.PostProcess(\"NebulaShader\" + i, \"nebulas\", null, null, 1, camera, undefined, engine, true, undefined, undefined, undefined, undefined, undefined, undefined, _babylonjs_core__WEBPACK_IMPORTED_MODULE_0__.ShaderLanguage.WGSL));\n        }\n    }\n}\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-client)/./app/space/BabylonInteractivity.tsx\n"));

/***/ })

});